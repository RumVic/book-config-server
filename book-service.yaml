# application.yml
server:
  port: 8787
spring:
  application:
    name: book-service
  cloud:
    consul:
      host: consul
      port: 8500
      discovery:
        enabled: true  # Enable service discovery
  #       service-name: book-service  # Optional: Custom service name
  #       health-check-url: http://book-service:8787/actuator/health
  #       # instance-id: ${spring.application.name}:${random.value}:${server.port}
  #       instance-id: book-service:8787
  #       prefer-ip-address: false
  #       register: true
  # #     instanceId: ${spring.application.name}:${spring.cloud.client.hostname}:${server.port}
        # enabled: true  # Enable service discovery
        # register: true  # Enable service registration
        # instanceId: ${spring.application.name}:${server.port}
        # healthCheckUrl: http://book-service:8787/actuator/health  # URL for health check
        # healthCheckInterval: 15s  # Interval for health check
        # preferIpAddress: false  # Use service name instead of IP address
        # service-name: ${spring.application.name}  # Custom service name (optional)
  #mongo
  data:
    mongodb:
      uri: mongodb://mongo:27017/image_books
      username: mongodb
      password: admin
      profiles:
        active: dev
  servlet:
    multipart:
      max-file-size: 2000MB
      max-request-size: 2000MB
  main:
    allow-bean-definition-overriding: true
  datasource:
    url: jdbc:postgresql://postgres:5432/books
    username: postgres
    password: postgres
    driver: org.postgresql.Driver
  jpa:
    properties:
      hibernate:
        show_sql: true
        hbm2ddl.auto: update
        cache:
          caches:
            -name: booksCache
          use_second_level_cache: true
          region:
            factory_class: com.hazelcast.hibernate.HazelcastCacheRegionFactory
  # kafka
  kafka:
    bootstrap-servers: kafka1:29092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer

# liquibase.properties
liquibase:
  change-log: classpath:/db/changelog/db.changelog-master.yaml
  contexts: development, production
  default-schema: book

# logging
management:
  endpoints:
    web:
      exposure:
        include: health
logging:
  level:
    org.springframework.data.mongodb.core: debug
    hibernate: debug
    springframework:
      cache: debug
    org.springframework.cloud.consul: DEBUG